<?php

namespace Proxies\__CG__\Cabinet\MedicalBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class medecin extends \Cabinet\MedicalBundle\Entity\medecin implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setSpecialite($specialite)
    {
        $this->__load();
        return parent::setSpecialite($specialite);
    }

    public function getSpecialite()
    {
        $this->__load();
        return parent::getSpecialite();
    }

    public function setAbout($about)
    {
        $this->__load();
        return parent::setAbout($about);
    }

    public function getAbout()
    {
        $this->__load();
        return parent::getAbout();
    }

    public function setCode($code)
    {
        $this->__load();
        return parent::setCode($code);
    }

    public function getCode()
    {
        $this->__load();
        return parent::getCode();
    }

    public function addConsultation(\Cabinet\MedicalBundle\Entity\consultation $consultation)
    {
        $this->__load();
        return parent::addConsultation($consultation);
    }

    public function removeConsultation(\Cabinet\MedicalBundle\Entity\consultation $consultation)
    {
        $this->__load();
        return parent::removeConsultation($consultation);
    }

    public function getConsultation()
    {
        $this->__load();
        return parent::getConsultation();
    }

    public function addRdv(\Cabinet\MedicalBundle\Entity\rdv $rdv)
    {
        $this->__load();
        return parent::addRdv($rdv);
    }

    public function removeRdv(\Cabinet\MedicalBundle\Entity\rdv $rdv)
    {
        $this->__load();
        return parent::removeRdv($rdv);
    }

    public function getRdv()
    {
        $this->__load();
        return parent::getRdv();
    }

    public function addOpmedd(\Cabinet\MedicalBundle\Entity\operationmed $opmedd)
    {
        $this->__load();
        return parent::addOpmedd($opmedd);
    }

    public function removeOpmedd(\Cabinet\MedicalBundle\Entity\operationmed $opmedd)
    {
        $this->__load();
        return parent::removeOpmedd($opmedd);
    }

    public function getOpmedd()
    {
        $this->__load();
        return parent::getOpmedd();
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }

    public function setUsm(\Cabinet\MedicalBundle\Entity\User $usm = NULL)
    {
        $this->__load();
        return parent::setUsm($usm);
    }

    public function getUsm()
    {
        $this->__load();
        return parent::getUsm();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'specialite', 'about', 'code', 'usm', 'consultation', 'rdv', 'opmedd');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}